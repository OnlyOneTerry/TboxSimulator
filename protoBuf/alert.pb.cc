// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: alert.proto

#include "alert.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace AlertNS {
constexpr Alert::Alert(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : alertmsg_()
  , location_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct AlertDefaultTypeInternal {
  constexpr AlertDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AlertDefaultTypeInternal() {}
  union {
    Alert _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AlertDefaultTypeInternal _Alert_default_instance_;
constexpr AlertMsg::AlertMsg(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : alertitem_(0)

  , status_(false){}
struct AlertMsgDefaultTypeInternal {
  constexpr AlertMsgDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AlertMsgDefaultTypeInternal() {}
  union {
    AlertMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AlertMsgDefaultTypeInternal _AlertMsg_default_instance_;
}  // namespace AlertNS
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_alert_2eproto[2];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_alert_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_alert_2eproto = nullptr;

const uint32_t TableStruct_alert_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AlertNS::Alert, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::AlertNS::Alert, alertmsg_),
  PROTOBUF_FIELD_OFFSET(::AlertNS::Alert, location_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AlertNS::AlertMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::AlertNS::AlertMsg, alertitem_),
  PROTOBUF_FIELD_OFFSET(::AlertNS::AlertMsg, status_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::AlertNS::Alert)},
  { 8, -1, -1, sizeof(::AlertNS::AlertMsg)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AlertNS::_Alert_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AlertNS::_AlertMsg_default_instance_),
};

const char descriptor_table_protodef_alert_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\013alert.proto\022\007AlertNS\">\n\005Alert\022#\n\010alert"
  "Msg\030\001 \003(\0132\021.AlertNS.AlertMsg\022\020\n\010location"
  "\030\002 \001(\014\"A\n\010AlertMsg\022%\n\talertItem\030\001 \001(\0162\022."
  "AlertNS.AlertItem\022\016\n\006status\030\002 \001(\010*\306\003\n\tAl"
  "ertItem\022\013\n\007UNKNOWN\020\000\022\023\n\017ALERT_Vibration\020"
  "\001\022\027\n\023ALERT_Position_Move\020\002\022\021\n\rALERT_FP_L"
  "EAK\020\003\022\021\n\rALERT_RP_LEAK\020\004\022\030\n\024ALERT_TYRE_H"
  "IGH_TEMP\020\005\022\032\n\026ALERT_FP_HIGH_PRESSURE\020\006\022\032"
  "\n\026ALERT_RP_HIGH_PRESSURE\020\007\022\031\n\025ALERT_FP_L"
  "OW_PRESSURE\020\010\022\031\n\025ALERT_RP_LOW_PRESSURE\020\t"
  "\022\016\n\nALERT_FALL\020\n\022\017\n\013ALERT_CRASH\020\013\022\020\n\014ALE"
  "RT_TOPPLE\020\014\022\031\n\025ALERT_GUARD_DANGEROUS\020\r\022\026"
  "\n\022ALERT_GUARD_COMMON\020\016\022\021\n\rALERT_PARKING\020"
  "\017\022\020\n\014ALERT_MOVING\020\020\022\034\n\030ALERT_RAPID_ACCEL"
  "ERATION\020\021\022\022\n\016ALERT_IN_FENCE\020\022\022\023\n\017ALERT_O"
  "UT_FENCE\020\023B\033\n\rcom.iov.protoB\nAlertProtob"
  "\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_alert_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_alert_2eproto = {
  false, false, 647, descriptor_table_protodef_alert_2eproto, "alert.proto", 
  &descriptor_table_alert_2eproto_once, nullptr, 0, 2,
  schemas, file_default_instances, TableStruct_alert_2eproto::offsets,
  file_level_metadata_alert_2eproto, file_level_enum_descriptors_alert_2eproto, file_level_service_descriptors_alert_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_alert_2eproto_getter() {
  return &descriptor_table_alert_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_alert_2eproto(&descriptor_table_alert_2eproto);
namespace AlertNS {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AlertItem_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_alert_2eproto);
  return file_level_enum_descriptors_alert_2eproto[0];
}
bool AlertItem_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class Alert::_Internal {
 public:
};

Alert::Alert(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  alertmsg_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:AlertNS.Alert)
}
Alert::Alert(const Alert& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      alertmsg_(from.alertmsg_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  location_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location().empty()) {
    location_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_location(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:AlertNS.Alert)
}

inline void Alert::SharedCtor() {
location_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Alert::~Alert() {
  // @@protoc_insertion_point(destructor:AlertNS.Alert)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Alert::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  location_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Alert::ArenaDtor(void* object) {
  Alert* _this = reinterpret_cast< Alert* >(object);
  (void)_this;
}
void Alert::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Alert::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Alert::Clear() {
// @@protoc_insertion_point(message_clear_start:AlertNS.Alert)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  alertmsg_.Clear();
  location_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Alert::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .AlertNS.AlertMsg alertMsg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_alertmsg(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // bytes location = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_location();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Alert::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AlertNS.Alert)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AlertNS.AlertMsg alertMsg = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_alertmsg_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_alertmsg(i), target, stream);
  }

  // bytes location = 2;
  if (!this->_internal_location().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_location(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AlertNS.Alert)
  return target;
}

size_t Alert::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AlertNS.Alert)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .AlertNS.AlertMsg alertMsg = 1;
  total_size += 1UL * this->_internal_alertmsg_size();
  for (const auto& msg : this->alertmsg_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bytes location = 2;
  if (!this->_internal_location().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_location());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Alert::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Alert::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Alert::GetClassData() const { return &_class_data_; }

void Alert::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Alert *>(to)->MergeFrom(
      static_cast<const Alert &>(from));
}


void Alert::MergeFrom(const Alert& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AlertNS.Alert)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  alertmsg_.MergeFrom(from.alertmsg_);
  if (!from._internal_location().empty()) {
    _internal_set_location(from._internal_location());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Alert::CopyFrom(const Alert& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AlertNS.Alert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Alert::IsInitialized() const {
  return true;
}

void Alert::InternalSwap(Alert* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  alertmsg_.InternalSwap(&other->alertmsg_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &location_, lhs_arena,
      &other->location_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Alert::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_alert_2eproto_getter, &descriptor_table_alert_2eproto_once,
      file_level_metadata_alert_2eproto[0]);
}

// ===================================================================

class AlertMsg::_Internal {
 public:
};

AlertMsg::AlertMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:AlertNS.AlertMsg)
}
AlertMsg::AlertMsg(const AlertMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&alertitem_, &from.alertitem_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&alertitem_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:AlertNS.AlertMsg)
}

inline void AlertMsg::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&alertitem_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&alertitem_)) + sizeof(status_));
}

AlertMsg::~AlertMsg() {
  // @@protoc_insertion_point(destructor:AlertNS.AlertMsg)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void AlertMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AlertMsg::ArenaDtor(void* object) {
  AlertMsg* _this = reinterpret_cast< AlertMsg* >(object);
  (void)_this;
}
void AlertMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AlertMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AlertMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:AlertNS.AlertMsg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&alertitem_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&alertitem_)) + sizeof(status_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AlertMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .AlertNS.AlertItem alertItem = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_alertitem(static_cast<::AlertNS::AlertItem>(val));
        } else
          goto handle_unusual;
        continue;
      // bool status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AlertMsg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AlertNS.AlertMsg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .AlertNS.AlertItem alertItem = 1;
  if (this->_internal_alertitem() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_alertitem(), target);
  }

  // bool status = 2;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AlertNS.AlertMsg)
  return target;
}

size_t AlertMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AlertNS.AlertMsg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .AlertNS.AlertItem alertItem = 1;
  if (this->_internal_alertitem() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_alertitem());
  }

  // bool status = 2;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AlertMsg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AlertMsg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AlertMsg::GetClassData() const { return &_class_data_; }

void AlertMsg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<AlertMsg *>(to)->MergeFrom(
      static_cast<const AlertMsg &>(from));
}


void AlertMsg::MergeFrom(const AlertMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AlertNS.AlertMsg)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_alertitem() != 0) {
    _internal_set_alertitem(from._internal_alertitem());
  }
  if (from._internal_status() != 0) {
    _internal_set_status(from._internal_status());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AlertMsg::CopyFrom(const AlertMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AlertNS.AlertMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlertMsg::IsInitialized() const {
  return true;
}

void AlertMsg::InternalSwap(AlertMsg* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AlertMsg, status_)
      + sizeof(AlertMsg::status_)
      - PROTOBUF_FIELD_OFFSET(AlertMsg, alertitem_)>(
          reinterpret_cast<char*>(&alertitem_),
          reinterpret_cast<char*>(&other->alertitem_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AlertMsg::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_alert_2eproto_getter, &descriptor_table_alert_2eproto_once,
      file_level_metadata_alert_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace AlertNS
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::AlertNS::Alert* Arena::CreateMaybeMessage< ::AlertNS::Alert >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AlertNS::Alert >(arena);
}
template<> PROTOBUF_NOINLINE ::AlertNS::AlertMsg* Arena::CreateMaybeMessage< ::AlertNS::AlertMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AlertNS::AlertMsg >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
